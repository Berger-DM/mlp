# -*- coding: utf-8 -*-
# -*- mode: org -*-
#+startup: beamer overview indent

* CATP #02

Sem utilizar funcionais (=map=, =lapply=, etc).

1. Elaborar a função =vezes=, que recebe uma lista e um número. Ela
   deve retornar uma nova lista cujos elementos são o resultado de sua
   multiplicação pelo número passado. Exemplo:

   #+begin_src R :results output :session :exports both
   vezes(list(1, 2, 3), 2);
   #+end_src

   #+RESULTS:
   : [1] 2 4 6

2. Elaborar a função =inverte=, que recebe uma lista e a retorna
   invertida. Exemplo:

   #+begin_src R :results output :session :exports both
   inverte(list(1,2,3,4,5,6));
   #+end_src

   #+RESULTS:
   : [1] 6 5 4 3 2 1

3. Elaborar a função =expoente=, que recebe uma lista e um número,
   retornando uma lista com os elementos elevados ao número recebido.

   #+begin_src R :results output :session :exports both
   expoente(list(1,2,3,4,5,6), 2)
   #+end_src

   #+RESULTS:
   : [1]  1  4  9 16 25 36

4. Elaborar a função =multiplica=, que recebe duas listas de tamanhos
   idênticos e um número, retornando uma lista com o mesmo tamanho das
   listas de entrada que contém o resultado da multiplicação entre os
   elementos das listas (por posição) com o número passado como
   argumento.

   #+begin_src R :results output :session :exports both
   multiplica(list(2,3), list(4,5), 2)
   #+end_src

   #+RESULTS:
   : [1]  16  30
