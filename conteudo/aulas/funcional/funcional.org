# -*- coding: utf-8 -*-
# -*- mode: org -*-
#+startup: beamer overview indent
#+LANGUAGE: pt-br
#+TAGS: noexport(n)
#+EXPORT_EXCLUDE_TAGS: noexport
#+EXPORT_SELECT_TAGS: export

#+Title: Programação Funcional
#+Author: Prof. Lucas M. Schnorr (UFRGS)
#+Date: \copyleft

#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [xcolor=dvipsnames]
#+OPTIONS:   H:1 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+LATEX_HEADER: \input{../org-babel.tex}
#+LATEX_HEADER: \usepackage{color,colortbl}
#+LATEX_HEADER: \definecolor{gray98}{rgb}{0.98,0.98,0.98}
#+LATEX_HEADER: \definecolor{gray20}{rgb}{0.20,0.20,0.20}
#+LATEX_HEADER: \definecolor{gray25}{rgb}{0.25,0.25,0.25}
#+LATEX_HEADER: \definecolor{gray16}{rgb}{0.161,0.161,0.161}
#+LATEX_HEADER: \definecolor{gray60}{rgb}{0.6,0.6,0.6}
#+LATEX_HEADER: \definecolor{gray30}{rgb}{0.3,0.3,0.3}
#+LATEX_HEADER: \definecolor{bgray}{RGB}{248, 248, 248}
#+LATEX_HEADER: \definecolor{amgreen}{RGB}{77, 175, 74}
#+LATEX_HEADER: \definecolor{amblu}{RGB}{55, 126, 184}
#+LATEX_HEADER: \definecolor{amred}{RGB}{228,26,28}
#+LATEX_HEADER: \usepackage{listings}
#+LATEX_HEADER: \lstset{ %
#+LATEX_HEADER:  backgroundcolor=\color{gray98},    % choose the background color; you must add \usepackage{color} or \usepackage{xcolor}
#+LATEX_HEADER:  basicstyle=\tt\prettysmall,      % the size of the fonts that are used for the code
#+LATEX_HEADER:  breakatwhitespace=false,          % sets if automatic breaks should only happen at whitespace
#+LATEX_HEADER:  breaklines=true,                  % sets automatic line breaking
#+LATEX_HEADER:  showlines=true,                  % sets automatic line breaking
#+LATEX_HEADER:  captionpos=b,                     % sets the caption-position to bottom
#+LATEX_HEADER:  commentstyle=\color{gray30},      % comment style
#+LATEX_HEADER:  extendedchars=true,               % lets you use non-ASCII characters; for 8-bits encodings only, does not work with UTF-8
#+LATEX_HEADER:  frame=single,                     % adds a frame around the code
#+LATEX_HEADER:  keepspaces=true,                  % keeps spaces in text, useful for keeping indentation of code (possibly needs columns=flexible)
#+LATEX_HEADER:  keywordstyle=\color{amblu},       % keyword style
#+LATEX_HEADER: % procnamestyle=\color{amred},       % procedures style
#+LATEX_HEADER:  language=C,             % the language of the code
#+LATEX_HEADER:  numbers=none,                     % where to put the line-numbers; possible values are (none, left, right)
#+LATEX_HEADER:  numbersep=5pt,                    % how far the line-numbers are from the code
#+LATEX_HEADER:  numberstyle=\tiny\color{gray20}, % the style that is used for the line-numbers
#+LATEX_HEADER:  rulecolor=\color{gray20},          % if not set, the frame-color may be changed on line-breaks within not-black text (e.g. comments (green here))
#+LATEX_HEADER:  showspaces=false,                 % show spaces everywhere adding particular underscores; it overrides 'showstringspaces'
#+LATEX_HEADER:  showstringspaces=false,           % underline spaces within strings only
#+LATEX_HEADER:  showtabs=false,                   % show tabs within strings adding particular underscores
#+LATEX_HEADER:  stepnumber=2,                     % the step between two line-numbers. If it's 1, each line will be numbered
#+LATEX_HEADER:  stringstyle=\color{amdove},       % string literal style
#+LATEX_HEADER:  tabsize=2,                        % sets default tabsize to 2 spaces
#+LATEX_HEADER:  % title=\lstname,                    % show the filename of files included with \lstinputlisting; also try caption instead of title
#+LATEX_HEADER: % procnamekeys={call}
#+LATEX_HEADER: }
#+LATEX_HEADER: \usepackage{minted}

#+Latex: \maketitle

* Apresentação da programação funcional

#+BEGIN_CENTER
#+Latex: \Huge
\rightarrow *FUNÇÕES* \leftarrow
#+END_CENTER

#+Latex: \vfill\pause

São elementos de primeira ordem
- Atribuí-las a variáveis
- Guardá-las em listas
- Passá-las como argumentos
- Criá-las dentro de outra função
- Retorná-las como resultado de uma outra função

#+Latex: \vfill\pause

Blocos básicos
- Funções anônimas
- /Closures/ (funções escritas por outras funções)
- Listas de funções

* Motivar a necessidade da abordagem funcional

Arquivo que usa =-99= para representar valores ausentes.

#+begin_src R :results output latex :session :exports both
library(tidyverse)
library(xtable);
set.seed(42)
df <- data.frame(
    replicate(6, sample(c(1:10, -99), 6, rep = TRUE)))
names(df) <- letters[1:6];
xtable(df, size="\\small")
#+end_src

#+RESULTS:
#+BEGIN_EXPORT latex
% latex table generated in R 3.3.3 by xtable 1.8-2 package
% Sun Sep  3 20:50:07 2017
\begin{table}[ht]
\centering
\begin{tabular}{rrrrrrr}
  \hline
 & a & b & c & d & e & f \\ 
  \hline
1 & -99.00 & 9.00 & -99.00 & 6.00 & 1.00 & 9.00 \\ 
  2 & -99.00 & 2.00 & 3.00 & 7.00 & 6.00 & 9.00 \\ 
  3 & 4.00 & 8.00 & 6.00 & 10.00 & 5.00 & 5.00 \\ 
  4 & 10.00 & 8.00 & -99.00 & 2.00 & 10.00 & 8.00 \\ 
  5 & 8.00 & 6.00 & -99.00 & -99.00 & 5.00 & 1.00 \\ 
  6 & 6.00 & 8.00 & 2.00 & -99.00 & 10.00 & 10.00 \\ 
   \hline
\end{tabular}
\end{table}
#+END_EXPORT

*Objetivo*: substituir =-99= por =NA=. Como fazer?

* Soluções ingênuas

#+BEGIN_CENTER
Onde estão os erros semânticos?
#+END_CENTER

** #1                                                                 :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.5
:BEAMER_opt: t
:END:
#+begin_src R :results output latex :session :exports both
df$a[df$a == -99] <- NA
df$b[df$b == -99] <- NA
df$c[df$c == -98] <- NA
df$d[df$d == -99] <- NA
df$e[df$e == -99] <- NA
df$f[df$g == -99] <- NA
#+end_src
** #2                                                                 :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.5
:BEAMER_opt: t
:END:
#+begin_src R :results output :session :exports both
fix_missing <- function(x) {
  x[x == -99] <- NA
  x
}
df$a <- fix_missing(df$a)
df$b <- fix_missing(df$b)
df$c <- fix_missing(df$c)
df$d <- fix_missing(df$d)
df$e <- fix_missing(df$e)
df$f <- fix_missing(df$e)
#+end_src
* Uma solução mais sofisticada

Utilizar duas funções
- =fix_missing= sabe como substituir =-99= por =NA=
- =lapply= sabe como aplicar algo para cada coluna do DF
  - Recebe três argumentos: lista, função, argumentos para a função

#+BEGIN_CENTER
A Função =lapply= é um exemplo de *funcional*

(uma função que recebe outra função)
#+END_CENTER

#+Latex: \pause

#+begin_src R :results output :session :exports both
fix_missing <- function(x) {
  x[x == -99] <- NA
  x
}
# Aplicando para todas as colunas
df[] <- lapply(df, fix_missing)
# Aplicando para somente as cinco primeiras colunas
df[1:5] <- lapply(df[1:5], fix_missing)
#+end_src

#+Latex: \vfill\pause
#+BEGIN_CENTER
Ideia chave: *composição de funções*.
#+END_CENTER
* E se...
#+BEGIN_CENTER
... os valores ausentes são representados por vários valores.
#+END_CENTER

Solução ingênua: copiar/colar \rightarrow criador de problemas

#+Latex: \vfill\pause

#+BEGIN_CENTER
Solução melhor:

Utilizar uma função que cria outras funções (*closure*).
#+END_CENTER

#+begin_src R :results output :session :exports both
missing_fixer <- function(na_value) {
  function(x) {
    x[x == na_value] <- NA
    x
  }
}
fix_missing_99 <- missing_fixer(-99)
fix_missing_999 <- missing_fixer(-999)
#+end_src
* #1: Funções anônimas

Declarando

#+begin_src R :results output :session :exports code
function(x) x*x
#+end_src

#+Latex: \vfill

Todas as funções tem =formals=, =body=, e um =environment=.

#+begin_src R :results output :session :exports both
formals( function(x) x*x )
body( function(x) x*x )
environment( function(x) x*x )
#+end_src

#+RESULTS:
: $x
: x * x
: <environment: R_GlobalEnv>
* Chamando funções anônimas
É obrigatório o uso dos parênteses
- Para chamar a função
- Para passar argumentos

#+Latex: \vfill\pause

#+begin_src R :results output :session :exports both
( function(x) x*x ) (2)
# faz a mesma coisa que o seguinte
f <- function(x) x*x
f(2);
#+end_src

#+RESULTS:
: [1] 4
: [1] 4
* #2: /Closure/

#+BEGIN_CENTER
``An object is data with functions. A closure is \linebreak
 a function with data.'' — [[https://twitter.com/johndcook][John D. Cook]]
#+END_CENTER

Funções anônimas
- Definir pequenas funções que não merecem um nome
- Criar /Closures/

#+latex: \vfill\pause

Elas levam consigo o _escopo/ambiente_ de onde foram definidas

#+begin_src R :results output :session :exports code
power <- function(exponent) {
  function(x) {
    x ^ exponent
  }
}
square <- power(2)
cube <- power(3)
#+end_src

* Investigando a implementação de /closures/

#+begin_src R :results output :session :exports both
square
#+end_src

#+RESULTS:
: function(x) {
:     x ^ exponent
:   }
: <environment: 0x55d41594eec8>

#+begin_src R :results output :session :exports both
cube
#+end_src

#+RESULTS:
: function(x) {
:     x ^ exponent
:   }
: <environment: 0x55d41594e178>

#+BEGIN_CENTER
O que mudou?
#+END_CENTER

* Verificando o _escopo/ambiente_ de /closures/

#+begin_src R :results output :session :exports both
as.list(environment(square))
#+end_src

#+RESULTS:
: $exponent
: [1] 2

#+begin_src R :results output :session :exports both
as.list(environment(cube))
#+end_src

#+RESULTS:
: $exponent
: [1] 3

* Estado mutável

Modificar valores no ambiente do pai; permite criar estados mutáveis.
- Uma /closure/ leva consigo o _escopo/ambiente_ de onde foi definida.

#+begin_src R :results output :session :exports both
new_counter <- function() {
  i <- 0
  function() {
    i <<- i + 1
    i
  }
}
counter_one <- new_counter()
counter_two <- new_counter()
counter_one()
counter_one()
counter_two()
#+end_src

#+RESULTS:
: [1] 1
: [1] 2
: [1] 1

* #3: Lista de funções
* Referência
[[http://adv-r.had.co.nz/][Advanced R by Hadley Wickham]]
- Capítulo sobre /[[http://adv-r.had.co.nz/Functional-programming.html][Functional Programming]]/

* Setup                                                            :noexport:

#+name: setup
#+begin_src emacs-lisp :results silent :exports none
;; Use minted
(add-to-list 'org-latex-packages-alist '("" "minted"))
(setq org-latex-listings 'minted)

;; Add the shell-escape flag
(setq org-latex-pdf-process '(
                              "pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"
                              ;; "bibtex %b"
                              "pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"
                              "pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"
                              ))

;; Sample minted options.
(setq org-latex-minted-options '(
                                 ("frame" "lines")
                                 ("fontsize" "\\scriptsize")
                                 ("xleftmargin" "\\parindent")
                                 ))
#+end_src

# Local variables:
# eval: (org-sbe "setup")
# End:
